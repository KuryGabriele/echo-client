name: Build and Release Electron App

on:
  push:
    branches:
      - main

jobs:
  build-and-release:
    runs-on: windows-latest

    env:
      CI: false
      GITHUB_TOKEN: ${{ secrets.zth_token }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies for the React frontend
        run: npm install
        working-directory: ./echo

      - name: Build React Frontend
        run: npm run build
        working-directory: ./echo

      - name: Install dependencies for the Electron app
        run: npm install
        working-directory: ./electron

      - name: Build Electron App
        id: build_electron_app
        run: |
          npm run make
          echo "artifact_path=$(Get-Content -Path .\electron\build\output.txt -Raw)" >> $GITHUB_ENV
          Get-ChildItem -Path $env:artifact_path -File | ForEach-Object {
            Write-Output $_.FullName
          }

      - name: Extract version from package.json
        id: extract_version
        run: |
          $pkg_version = (Get-Content -Path .\echo\package.json | ConvertFrom-Json).version
          echo "version=$pkg_version" >> $GITHUB_ENV

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: v${{ steps.extract_version.outputs.version }}
          release_name: Release v${{ steps.extract_version.outputs.version }}
          draft: false
          prerelease: false

      - name: Upload Executables
        id: upload-executables
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.zth_token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: |
            $env:artifact_path\*.exe
          asset_name: echo-${{ steps.extract_version.outputs.version }}-executables.zip
          asset_content_type: application/zip

      - name: Upload Package
        id: upload-package
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.zth_token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: |
            $env:artifact_path\*.nupkg
          asset_name: echo-${{ steps.extract_version.outputs.version }}.nupkg
          asset_content_type: application/zip

      - name: Upload Source Code
        id: upload-source-code
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.zth_token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: .\electron\out\Echo-win32-x64
          asset_name: pre-compiled-${{ steps.extract_version.outputs.version }}.zip
          asset_content_type: application/zip
